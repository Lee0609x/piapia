name: Docker Image CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Vue Build
      run: |
        npm install --prefix front_end
        npm run --prefix front_end build
    - name: Front End Resources Copy
      run: |
        rm -rf app/static/.*
        cp front_end/dist/.* app/static
    - name: Get Version
      id: vars
      run: echo ::set-output name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag lee0609x/python-training:${{ steps.vars.outputs.RELEASE_VERSION }}
    - name: Login to Registry
      run: docker login --username=${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
    - name: Push Image
      run: docker push lee0609x/python-training:${{ steps.vars.outputs.RELEASE_VERSION }}
    - name: SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.CLOUD_HOST }}
        username: ${{ secrets.CLOUD_USERNAME }}
        password: ${{ secrets.CLOUD_PASSWORD }}
        port: 22
        script: |
          docker pull lee0609x/python-training:${{ steps.vars.outputs.RELEASE_VERSION }}
          docker stop python-training
          docker rm `docker ps -a | grep Exited | grep python-training | awk '{print $1}'`
          docker rmi `docker images | grep none | grep "lee0609x/python-training" | awk '{print $3}'`
          docker run --name python-training -p 80:80 -d lee0609x/python-training:${{ steps.vars.outputs.RELEASE_VERSION }}